{"version":3,"sources":["reddit-api.js","index.js"],"names":["search","searchTerm","searchLimit","sortBy","console","log","fetch","then","res","json","data","children","map","catch","err","searchForm","document","getElementById","searchInput","addEventListener","value","querySelector","showMessage","reddit","results","output","forEach","post","image","preview","images","source","url","title","short","selftext","subreddit","score","innerHTML","e","preventDefault","message","className","dangerDiv","createElement","appendChild","createTextNode","parentElementBefore","searchElement","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"reddit-api.24cc92b2.map","sourceRoot":"..","sourcesContent":["  export default {\r\n    search: function(searchTerm, searchLimit, sortBy){\r\n      console.log('It works..!');\r\n      // Fetch the reddit-api by searchTerm, limit and sort\r\n      return fetch(`http://www.reddit.com/search.json?q=${searchTerm}&limit=${searchLimit}&sort=${sortBy}`)\r\n      // Graps the results as json\r\n      .then(res => res.json())\r\n      // Grabs the data and maps out only the data in the array\r\n      .then(data => data.data.children.map(data => data.data))\r\n      .catch(err => console.log(err));\r\n      console.log(data.data.children);\r\n    }\r\n  };\r\n","  // Declare reddit\r\n  import reddit from './reddit-api';\r\n\r\n  const searchForm = document.getElementById('search-form');\r\n  // Grab input text\r\n  const searchInput = document.getElementById('search-input');\r\n\r\n  // Add event listener to search input\r\n  searchForm.addEventListener('submit', e => {\r\n    // Grab search-term\r\n    const searchTerm = searchInput.value;\r\n    // Grab sort-by: new and relevance depending on checked\r\n    const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\r\n    // Get limit\r\n    const searchLimit = document.querySelector('#limit').value;\r\n\r\n    // Check if input is empty\r\n    if(searchInput.value == ''){\r\n      // Run function that shows a message with two parameters: message and className\r\n      showMessage('Please fill in the search-field', 'alert-danger');\r\n    }\r\n\r\n    // Clear seach field\r\n    searchInput.value = '';\r\n\r\n    // Search reddit\r\n    reddit.search(searchTerm, searchLimit, sortBy).then\r\n    // Grab the data in results\r\n    (results => {\r\n      console.log(results);\r\n      // Variable to store the results from the search\r\n      let output = '<div class=\"card-columns\">';\r\n\r\n      // Loop through each object and append content\r\n      results.forEach((post) => {\r\n        // Check if there is an image, if not set it to generic reddit icon-image\r\n        let image = post.preview ? post.preview.images[0].source.url : 'https://cdn.vox-cdn.com/thumbor/FXJtC7HR05_Eweus_7SQVdTleOk=/0x0:640x427/1200x800/filters:focal(269x163:371x265)/cdn.vox-cdn.com/uploads/chorus_image/image/59028817/reddit_logo_640.0.jpg';\r\n        // If image is not there use reddit image\r\n        // Output HTML content\r\n        output += `<div class=\"card\">\r\n                <img class=\"card-img-top\" src=${image} alt=\"Card image cap\">\r\n                <div class=\"card-body\">\r\n                <h5 class=\"card-title\">${post.title}</h5>\r\n                <p class=\"card-text\">${short(post.selftext, 100)}</p>\r\n                <a href=${post.url} target=\"_blank\" class=\"btn btn-primary\">Read more</a>\r\n                <hr><span class=\"badge badge-secondary\">Subreddit: ${post.subreddit}</span>\r\n                <span class=\"badge badge-dark\">Score: ${post.score}</span>\r\n              </div>\r\n          </div>`\r\n      });\r\n\r\n      // Append closing div tag to output\r\n      output += '</div>';\r\n      // Set results-div to res and set its innerHTML to output\r\n      let res = document.getElementById('results');\r\n      res.innerHTML = output;\r\n    });\r\n    // Prevent from submitting\r\n    e.preventDefault();\r\n  });\r\n\r\n  // Show alert message function\r\n  function showMessage(message, className){\r\n    // If alert already exists return nothing\r\n    if(document.querySelector('.alert') !== null) {\r\n      return;\r\n    }\r\n    // Create div that holds the alert message\r\n    let dangerDiv = document.createElement('div');\r\n    // Create the content that is to be displayed\r\n    // dangerDiv.classList.add(`alert ${className}`);\r\n    //dangerDiv.className(`alert ${className}`);\r\n    dangerDiv.className = `alert ${className}`;\r\n    dangerDiv.appendChild(document.createTextNode(message));\r\n    // Grab parent element to dangerDiv\r\n    const parentElementBefore = document.getElementById('search-container');\r\n    const searchElement = document.getElementById('search');\r\n    //  Insert new div into parent element bedre searchElement\r\n    parentElementBefore.insertBefore(dangerDiv, searchElement);\r\n    // Timeout function - display alert for 1 seconds then remove element\r\n    setTimeout(function() {\r\n      document.querySelector('.alert').remove();\r\n    }, 2000);\r\n  }\r\n\r\n  // Truncate selftext over 100 characters - function\r\n  function short(text, limit){\r\n    const shortened = text.indexOf(\" \", limit);\r\n    if(shortened == -1) return text;\r\n    return text.substring(0, shortened);\r\n  };\r\n"]}